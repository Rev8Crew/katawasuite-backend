# Docker-compose file is used only for local development. This is not production-ready example.

version: '3.8'

volumes:
  mysql-data:
    driver: local
  tmp-data:
    driver: local

services:
  app: &app
    build:
      context: .
      dockerfile: Dockerfile
    user: "${APP_UID:-10001}:${APP_GID:-10001}"
    networks:
      - katawa-suite
    env_file:
      - .env
    environment:
      PS1: '\[\033[1;32m\]\[\033[1;36m\][\u@\h] \[\033[1;34m\]\w\[\033[0;35m\] \[\033[1;36m\]# \[\033[0m\]'
      HOME: /tmp
    volumes:
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
      - tmp-data:/tmp:rw
      - .:/app:rw
    depends_on:
      mysql: {condition: service_healthy}
      nginx-proxy: {condition: service_started}
      acme-companion: {condition: service_started}
      phpmyadmin: {condition: service_started}
      rabbitmq: {condition: service_started}

  nginx-proxy:
    image: jwilder/nginx-proxy
    container_name: katawa-suite-nginx-proxy
    networks:
      - katawa-suite
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/htpasswd:/etc/nginx/htpasswd
      - ./docker/nginx/certs:/etc/nginx/certs
      - ./docker/nginx/vhost:/etc/nginx/vhost.d
      - ./docker/nginx/html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro

  acme-companion:
    image: nginxproxy/acme-companion
    networks:
      - katawa-suite
    container_name: katawa-suite-nginx-proxy-acme
    environment:
      - DEFAULT_EMAIL=dimaelik71@gmail.com
      - NGINX_PROXY_CONTAINER=katawa-suite-nginx-proxy
    volumes:
      - ./docker/nginx/certs:/etc/nginx/certs:rw
      - ./docker/nginx/vhost:/etc/nginx/vhost.d
      - ./docker/nginx/html:/usr/share/nginx/html
      - ./docker/nginx/acme:/etc/acme.sh
      - /var/run/docker.sock:/var/run/docker.sock:ro

  web:
    <<: *app
    command: rr serve -c .rr.yaml
    expose:
      - 8080
    environment:
      - VIRTUAL_HOST=${WEB_VIRTUAL_HOST}
      - LETSENCRYPT_HOST=${WEB_VIRTUAL_HOST}
    healthcheck:
      test: ['CMD-SHELL', 'wget --spider -q "http://127.0.0.1:8082/health?plugin=http&plugin=rpc"']
      interval: 2s
      timeout: 2s

  queue:
    <<: *app
    command: php /app/artisan queue:work --memory=256 --sleep=1

  cron:
    <<: *app
    command: supercronic /etc/supercronic/laravel # it runs artisan schedule:run

  mysql:
    image: 'mysql/mysql-server:8.0'
    container_name: katawa-suite-mysql
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ROOT_HOST: "%"
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
      NETWORK_ACCESS: internal
    volumes:
      - 'mysql-data:/var/lib/mysql'
    networks:
      - katawa-suite
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-p${DB_PASSWORD}" ]
      retries: 3
      timeout: 5s

  phpmyadmin:
    build: ./docker/phpmyadmin
    container_name: katawa-suite-phpmyadmin
    environment:
      - PMA_ARBITRARY=1
      - MYSQL_USER=${PMA_USER}
      - MYSQL_PASSWORD=${PMA_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${PMA_ROOT_PASSWORD}
      - MAX_EXECUTION_TIME=${PMA_MAX_EXECUTION_TIME}
      - MEMORY_LIMIT=${PMA_MEMORY_LIMIT}
      - UPLOAD_LIMIT=${PMA_UPLOAD_LIMIT}
      - VIRTUAL_HOST=${PMA_VIRTUAL_HOST}
      - LETSENCRYPT_HOST=${PMA_VIRTUAL_HOST}
    depends_on:
      - mysql
    networks:
      - katawa-suite

  rabbitmq:
    build: ./docker/rabbitmq
    container_name: katawa-suite-rabbitmq
    environment:
      - VIRTUAL_HOST=${RABBITMQ_VIRTUAL_HOST}
      - LETSENCRYPT_HOST=${RABBITMQ_VIRTUAL_HOST}
      - VIRTUAL_PORT=${RABBITMQ_MANAGEMENT_HTTP_HOST_PORT}
    privileged: true
    volumes:
      - rabbit-data:/var/lib/rabbitmq
      - ./docker/rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - ./docker/rabbitmq/management_agent.disable_metrics_collector.conf:/etc/rabbitmq/conf.d/management_agent.disable_metrics_collector.conf
    networks:
      - katawa-suite

networks:
  katawa-suite:
    driver: bridge
