# Docker-compose file is used only for local development. This is not production-ready example.

version: '3.8'

volumes:
  pg-data:
    driver: local
  redis-data:
    driver: local
  tmp-data:
    driver: local

services:
  app: &app
    build:
      context: .
      dockerfile: Dockerfile
    user: "${APP_UID:-10001}:${APP_GID:-10001}"
    networks:
      - laravel
    environment:
      PS1: '\[\033[1;32m\]\[\033[1;36m\][\u@\h] \[\033[1;34m\]\w\[\033[0;35m\] \[\033[1;36m\]# \[\033[0m\]'
      HOME: /tmp
      APP_DEBUG: 'true'
      APP_ENV: local
      REDIS_HOST: redis
      REDIS_PASSWORD: redis_password
      DB_DATABASE: forge
      DB_USERNAME: forge
      DB_PASSWORD: forge
    volumes:
      - /etc/passwd:/etc/passwd:ro
      - /etc/group:/etc/group:ro
      - tmp-data:/tmp:rw
      - .:/app:rw
    depends_on:
      postgres: {condition: service_healthy}
      redis: {condition: service_healthy}
      nginx-proxy: {condition: service_started}
      acme-companion: {condition: service_started}
      pgadmin: {condition: service_started}

  nginx-proxy:
    image: jwilder/nginx-proxy
    networks:
      - laravel
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/htpasswd:/etc/nginx/htpasswd
      - ./docker/certs:/etc/nginx/certs
      - ./docker/vhost:/etc/nginx/vhost.d
      - ./docker/html:/usr/share/nginx/html
      - /var/run/docker.sock:/tmp/docker.sock:ro

  acme-companion:
    image: nginxproxy/acme-companion
    networks:
      - laravel
    container_name: nginx-proxy-acme
    environment:
      - DEFAULT_EMAIL=dimaelik71@gmail.com
      - NGINX_PROXY_CONTAINER=nginx-proxy
    volumes:
      - ./docker/certs:/etc/nginx/certs:rw
      - ./docker/vhost:/etc/nginx/vhost.d
      - ./docker/html:/usr/share/nginx/html
      - ./docker/acme:/etc/acme.sh
      - /var/run/docker.sock:/var/run/docker.sock:ro

  web:
    <<: *app
    command: rr serve -c .rr.yaml
    expose:
      - 8080
    environment:
      - VIRTUAL_HOST=katawa-suite.ru
      - LETSENCRYPT_HOST=katawa-suite.ru
    healthcheck:
      test: ['CMD-SHELL', 'wget --spider -q "http://127.0.0.1:8082/health?plugin=http&plugin=rpc"']
      interval: 2s
      timeout: 2s

  queue:
    <<: *app
    command: php /app/artisan queue:work --memory=256 --sleep=1

  cron:
    <<: *app
    command: supercronic /etc/supercronic/laravel # it runs artisan schedule:run

  postgres:
    image: postgres:15-alpine # Image page: <https://hub.docker.com/_/postgres>
    networks:
      - laravel
    environment:
      POSTGRES_DB: forge
      POSTGRES_USER: forge
      POSTGRES_PASSWORD: forge
      NETWORK_ACCESS: internal
    volumes:
      - pg-data:/var/lib/postgresql/data:rw
    expose:
      - 5432
    healthcheck: # Healthcheck docs: <https://docs.docker.com/engine/reference/builder/#healthcheck>
      test: ['CMD-SHELL', 'pg_isready -U forge']
      interval: 2s
      timeout: 5s
      start_period: 2s

  redis:
    image: redis:7-alpine # Image page: <https://hub.docker.com/_/redis>
    command: redis-server --requirepass redis_password
    networks:
      - laravel
    environment:
      NETWORK_ACCESS: internal
    volumes:
      - redis-data:/data:rw
    expose:
      - 6379
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 500ms
      timeout: 1s

  pgadmin:
    image: dpage/pgadmin4:latest
    networks:
      - laravel
    expose:
      - 80
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@admin.com
      - PGADMIN_DEFAULT_PASSWORD=admin
      - VIRTUAL_HOST=pgadmin.katawa-suite.ru
      - LETSENCRYPT_HOST=pgadmin.katawa-suite.ru
    volumes:
      - ./docker/pgadmin:/var/lib/pgadmin
    depends_on:
      - postgres

networks:
  laravel:
    driver: bridge
